/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_de.h"




/*
 * Combos for ESC, Backspace, TAB and ENTER
 */

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <2 3>;
            layers = <0 1 3>;
            bindings = <&kp ESC>;
        };
        combo_bksp {
            timeout-ms = <50>;
            key-positions = <8 9>;
            layers = <0 1 3>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <26 27>;
            layers = <0 1 3>;
            bindings = <&kp TAB>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <0 1 3>;
            bindings = <&kp ENTER>;
        };
        combo_btclr {
            timeout-ms = <50>;
            key-positions = <0 12 24>;
            layers = <4>;
            bindings = <&bt BT_CLR>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------
            // | MO2  |  Q  |  W  |  E  |  R   |  T  |   |  Y  |  U   |  I  |  O  |  P  | MO2  |
            // | MO1  |  A  |  S  |  D  |  F   |  G  |   |  H  |  J   |  K  |  L  | SL3 | MO1  |
            // | SHFT |  Z  |  X  |  C  |  V   |  B  |   |  N  |  M   |  ,  |  .  |  -  | SHFT |
            //                    | NA  | LALT | SPC |   | SPC | RCTL | NA  |

            bindings = <
&mo 2      &kp Q     &kp W  &kp E  &kp R         &kp T        &kp DE_Z   &kp U      &kp I         &kp O       &kp P         &mo 2
&mo 1      &kp A     &kp S  &kp D  &kp F         &kp G        &kp H      &kp J      &kp K         &kp L       &sl 3         &mo 1
&kp LSHFT  &kp DE_Y  &kp X  &kp C  &kp V         &kp B        &kp N      &kp M      &kp DE_COMMA  &kp DE_DOT  &kp DE_MINUS  &kp RSHFT
                            &mo 4  &kp LALT      &kp SPACE    &kp SPACE  &kp RCTRL  &mo 4
            >;
        };

        symbol {
            // -----------------------------------------------------------------------------------------------------
            // | tran      | @ §    | + ~  | - _  | * %  | / \  |   | ` ´  |  7     |  8   |  9  |   ? | tran      |
            // | tran      | = "|"  |  {   |  (   |  )   |  }   |   | " '  |  4     |  5   |  6  | ! # | tran      |
            // | caps_word | $ €    |  <   |  [   |  ]   |  >   |   | 0 &  |  1     |  2   |  3  | ° ^ | caps_word |
            //                             | tran | GUI  | BSPC |   | BSPC | K_MENU | tran |

            bindings = <
&trans      &mt DE_SECT DE_AT   &mt DE_TILD DE_PLUS  &mt DE_UNDS DE_MINUS  &mt DE_PERC DE_ASTR  &mt DE_BSLS DE_SLSH      &bt LS(DE_ACUT) DE_ACUT  &kp DE_7    &kp DE_8  &kp DE_9   &kp DE_QUES          &trans
&trans      &mt DE_PIPE DE_EQL  &kp DE_LCBR          &kp DE_LPRN           &kp DE_RPRN          &kp DE_RCBR              &kp LEFT                 &kp DE_4    &kp DE_5  &kp DE_6   &mt DE_HASH DE_EXLM  &trans
&caps_word  &mt DE_EURO DE_DLR  &kp DE_LABK          &kp DE_LBRC           &kp DE_RBRC          &kp DE_RABK              &mt DE_AMPR DE_0         &kp DE_1    &kp DE_2  &kp DE_3   &mt DE_CIRC DE_DEG   &caps_word
                                                     &trans                &kp LGUI             &kp BSPC                 &kp BSPC                 &kp K_MENU  &trans
            >;
        };

        move {
            // -------------------------------------------------------------------------------------------
            // | tran | F6  | F7  | F8  | F9  | F10 |   | HOME | PG_DN  | PG_UP  | END     | BKSP | tran |
            // | tran | F1  | F2  | F3  | F4  | F5  |   | LEFT | DOWN   | UP     | RIGHT   | TAB  | tran |
            // | tran | F11 | F12 | NA  | NA  | NA  |   | NA   | K_COPY | K_CUT  | K_PASTE | DEL  | tran |
            //                    | NA |  NA  | NA  |   | NA   |  NA    | NA     |

            bindings = <
&trans     &kp F6    &kp F7  &kp F8    &kp F9    &kp F10      &kp HOME  &kp PG_DN   &kp PG_UP  &kp END      &kp BKSP  &trans
&trans     &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp LEFT  &kp DOWN    &kp UP     &kp RIGHT    &kp TAB   &trans
&trans     &kp F11   &kp F12 &none     &none     &none        &none     &kp K_COPY  &kp K_CUT  &kp K_PASTE  &kp DEL   &trans
                             &none     &none     &none        &none     &none       &none
            >;
        };

        umlaut {
            // -----------------------------------------------------------------------------------------
            // | tran | tran | ²    | ²    | tran | tran |   | Ü    | tran | Ö    | tran | tran | tran |
            // | tran | Ä    | ß    | tran | tran | tran |   | tran | tran | tran | tran | tran | tran |
            // | tran | tran | tran | tran | tran | tran |   | tran | µ    | tran | tran | tran | tran |
            //                      | tran | tran | tran |   | tran | tran | tran |

            bindings = <
&trans  &trans       &kp DE_SUP2  &kp DE_SUP3  &trans  &trans    &trans       &kp DE_UDIA  &trans  &kp DE_ODIA  &trans  &trans
&trans  &kp DE_ADIA  &kp DE_SS    &trans       &trans  &trans    &trans       &trans       &trans  &kp DE_AAT   &trans  &trans
&trans  &trans       &trans       &trans       &trans  &trans    &trans       &kp DE_MICR  &trans  &trans       &trans  &trans
                                  &trans       &trans  &trans    &trans       &trans       &trans
            >;
        };
        
        system {
            // --------------------------------------------------------------------------------------------------------
            // | K_SLEEP | NA       | NA       | NA       | NA       | NA       |   | NA | NA | NA | NA | NA | DE_3FS |
            // | K_PWR   | NA       | NA       | NA       | NA       | NA       |   | NA | NA | NA | NA | NA | NA     |
            // | NA      | BT_SEL 0 | BT_SEL 1 | BT_SEL 2 | BT_SEL 3 | BT_SEL 4 |   | NA | NA | NA | NA | NA | K_LOCK |
            //                                 | NA       | NA       | NA       |   | NA | NA | NA |

            bindings = <
&kp K_SLEEP  &none         &none         &none         &none          &none            &none  &none  &none  &none  &none  &kp DE_3FS
&kp K_PWR    &none         &none         &none         &none          &none            &none  &none  &none  &none  &none  &none
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4     &none  &none  &none  &none  &none  &kp K_LOCK
                                         &none         &none          &none            &none  &none  &none
            >;
        };
    };
};
